/*
* ms_evqueue.h
        *
        *  Created on: 30 Aug 2019
*      Author: grein
*/

//Idea based on
//https://github.com/ITBAALUMNOS/Tetris/blob/master/Sources/event_queue.h

//Event queue for collecting events generated by several sources

#ifndef _MS_EVQUEUE_H_
#define _MS_EVQUEUE_H_

#include <stdbool.h>

//Possible Events
typedef enum {MT_START, MT_STOP, MT_SS, MT_ES, MT_DATA, MT_SUCCESS, MT_N_EVS} mt_ev_id_t;

//Total number of events that event queue can hold
#define EV_QUEUE_MAX_LENGTH	1000

//Event structure
typedef struct {
    mt_ev_id_t type;
    bool data;
} mt_ev_t;


//Wait for event. Can only be used by main loop.
void event_queue_wait_for_event(mt_ev_t* ev);
//Flush event queue. Can only be used by main loop.
void event_queue_flush();
//Add event to event queue. True if event queue was not full.
bool event_queue_add_event(mt_ev_t ev);
bool event_queue_add_event_front(mt_ev_t ev);

//Get current queue length.
mt_ev_t event_queue_pop_front();
unsigned int event_queue_get_length();

#endif /* _MS_EVQUEUE_H_ */
