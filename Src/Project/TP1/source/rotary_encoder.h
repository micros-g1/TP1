/*
 * input_device.h
 *
 *  Created on: 30 Aug 2019
 *      Author: grein
 */

//Rotary encoder "Driver". Abstraction from rotary encoder signals.

#ifndef ROTARY_ENCODER_H_
#define ROTARY_ENCODER_H_

//SysTick. Call systick_init() before rotary_encoder_init
#include "SysTick.h"
#include "gpio.h"
#include <stdbool.h>

//Used pins
#define PIN_BUTTON_SIGNAL 	0
#define PIN_SIGNAL_A		0
#define PIN_SIGNAL_B		0

#define ROTARY_ENCODER_ISR_PERIOD_TICKS 10U

//How many input signals will be generated by encoder?
#define ROTARY_ENCODER_INPUTS 3

//Input signals are:
typedef enum {RE_CLICK,RE_LEFT,RE_RIGHT} re_id_t;

//Initialize input device
void rotary_encoder_init();

//Get rotary encoder input
bool rotary_encoder_get_input_state(re_id_t id);

//ISR for reading buttons
void rotary_encoder_ISR();

#endif /* ROTARY_ENCODER_H_ */
